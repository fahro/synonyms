{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/layout/Layout.js","components/search/SearchBar.js","components/search/ResultMessage.js","components/search/Entry.js","components/search/Result.js","components/search/Search.js","components/NotFound.js","utilities/UndirectedGraph.js","utilities/SynonymsDict.js","components/App.js","index.js"],"names":["Header","className","href","Component","Footer","Container","Layout","fluid","this","props","children","SearchBar","_handleKeyPress","e","key","search","Row","Col","md","size","offset","lg","Jumbotron","InputGroup","Input","placeholder","onKeyPress","onChange","updateKeyword","value","searchKeyword","Button","color","onClick","ResultMessage","Card","CardBody","message","Entry","word","data","CardGroup","CardTitle","close","remove","to","CardText","Result","state","synonymWord","add","keyword","setState","toLowerCase","target","autoFocus","synonyms","length","map","entry","index","bind","Search","findWordSynonyms","results","find_synonyms","currentWord","loadingResults","_onSearchKeywordUpdate","_handleSearchWordSynonyms","searchWord","_redirect","history","push","_renderResults","undefined","remove_synonym","add_synonym","Array","from","match","params","dictionary","prevProps","NotFound","UndirectedGraph","nodes","Map","has","set","Set","delete","source","destination","addVertex","get","sourceNodes","destinationNodes","first","visited","visitList","node","pop","synonymWords","forEach","connectedNode","SynonymsDict","graph","firstWord","secondWord","addEdge","words","graphSearchDFS","removeEdge","App","_clean_word","getAllSynonymWords","console","log","word1","word2","dict","pairSynonyms","unpairSynonyms","path","component","exact","trim","ReactDOM","render","basename","document","querySelector"],"mappings":"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","file":"static/js/main.77b21cc8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<div className=\"aa-header-area\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-6 col-sm-6 col-xs-6\">\n\t\t\t\t\t\t<div className=\"aa-header-left\">\n\t\t\t\t\t\t<div className=\"aa-telephone-no\">\n\t\t\t\t\t\t\t<span className=\"fa fa-phone\"></span>\n\t\t\t\t\t\t\t1-900-523-3564\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"aa-email hidden-xs\">\n\t\t\t\t\t\t\t<span className=\"fa fa-envelope-o\"></span> info@markups.com\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>              \n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-6 col-sm-6 col-xs-6\">\n\t\t\t\t\t\t<div className=\"aa-header-right\">\n\t\t\t\t\t\t<a href=\"register.html\" className=\"aa-register\">Register</a>\n\t\t\t\t\t\t<a href=\"signin.html\" className=\"aa-login\">Login</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        \t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\n\nclass Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={'footer'}>\n\t\t\t\t<Container>\n\t\t\t\t\t<span className={'text-muted'}>Fahro | Powered by Reeinvent</span>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, {Component} from 'react'\nimport {Container} from 'reactstrap'\nimport Header from './Header'\nimport Footer from './Footer'\n\nclass Layout extends Component {\n\n    render() {\n        return(\n            <div>\n                <Header />\n                    <Container fluid>\n                        { this.props.children }\n                    </Container>\n                <Footer />\n            </div>\n        )\n    }\n\n}\n\nexport default Layout","import React, { Component } from 'react';\nimport { Row, Col, Jumbotron, InputGroup, Input, Button } from 'reactstrap';\n\nclass SearchBar extends Component {\n\t_handleKeyPress = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\tthis.props.search();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col md={{ size: 10, offset: 1 }} lg={{ size: 8, offset: 2 }}>\n\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t<h4>Search Synonyms</h4>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder={'Type word...'}\n\t\t\t\t\t\t\t\tclassName={'search-bar'}\n\t\t\t\t\t\t\t\tonKeyPress={this._handleKeyPress}\n\t\t\t\t\t\t\t\tonChange={this.props.updateKeyword}\n\t\t\t\t\t\t\t\tvalue={this.props.searchKeyword}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor={'warning'}\n\t\t\t\t\t\t\t\tclassName={'search-btn'}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.search();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Jumbotron>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\n\nclass ResultMessage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col md={{ size: 8, offset: 2 }}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardBody className={'result-card-body'}>\n\t\t\t\t\t\t\t<h1 className={'result-message'}>{this.props.message}</h1>\n\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default ResultMessage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardText, CardGroup, CardTitle } from 'reactstrap';\n\nclass Entry extends Component {\n\trender() {\n\t\tlet word = this.props.data;\n\t\treturn (\n\t\t\t<CardGroup>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"synonym-delete\"\n\t\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.remove(word);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<Link to={'/browse/' + word}>\n\t\t\t\t\t\t\t<CardText className={'synonym-text'}>{word}</CardText>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</CardGroup>\n\t\t);\n\t}\n}\nexport default Entry;\n","import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody, InputGroup, Input, Button } from 'reactstrap';\nimport Entry from './Entry';\nimport ResultMessage from './ResultMessage';\nclass Result extends Component {\n\tstate = { synonymWord: '' };\n\t_handleKeyPress = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\tthis.props.add(this.props.keyword, this.state.synonymWord);\n\t\t\tthis.setState({ synonymWord: '' });\n\t\t}\n\t};\n\n\trender() {\n\t\tlet keyword = this.props.keyword;\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col md={{ size: 10, offset: 1 }} lg={{ size: 8, offset: 2 }}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t<div className={'keyword-text'}>{keyword}</div>\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tclassName=\"synonym-input\"\n\t\t\t\t\t\t\t\t\tplaceholder={'Type new synonym for ' + keyword.toLowerCase()}\n\t\t\t\t\t\t\t\t\tonKeyPress={this._handleKeyPress}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ synonymWord: e.target.value });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue={this.state.synonymWord}\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={'success'}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.props.add(keyword, this.state.synonymWord);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</InputGroup>\n\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t{this.props.synonyms && this.props.synonyms.length > 0 ? (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t{this.props.synonyms.map((entry, index) => (\n\t\t\t\t\t\t\t\t\t\t<Col md=\"4\" key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<Entry\n\t\t\t\t\t\t\t\t\t\t\t\tsearch={this.props.search}\n\t\t\t\t\t\t\t\t\t\t\t\tdata={entry}\n\t\t\t\t\t\t\t\t\t\t\t\tremove={this.props.remove.bind(null, keyword)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ResultMessage\n\t\t\t\t\t\t\t\t\tmessage={\n\t\t\t\t\t\t\t\t\t\t'Sorry but there is no synonym found for the word: ' + keyword.toLowerCase()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default Result;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport ResultMessage from './ResultMessage';\nimport Result from './Result';\n\nclass Search extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet keyword = props.match.params.keyword;\n\t\tif (keyword === undefined) keyword = '';\n\t\tthis.state = {\n\t\t\tcurrentWord: keyword,\n\t\t\tsearchKeyword: keyword,\n\t\t\tdictionary: this.props.dictionary,\n\t\t\tresults: null\n\t\t};\n\t}\n\tfindWordSynonyms = (word) => {\n\t\tlet results = this.props.find_synonyms(word);\n\t\tthis.setState({\n\t\t\tcurrentWord: word,\n\t\t\tresults\n\t\t});\n\t};\n\n\tloadingResults = () => {\n\t\tthis.setState({ results: false });\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.match.params.keyword !== this.props.match.params.keyword) {\n\t\t\tthis.setState({ searchKeyword: this.props.match.params.keyword }, () => {\n\t\t\t\tthis._handleSearchWordSynonyms();\n\t\t\t});\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tif (!!this.state.searchKeyword) {\n\t\t\tthis._handleSearchWordSynonyms();\n\t\t}\n\t}\n\n\t_onSearchKeywordUpdate = (e) => {\n\t\tthis.setState({ searchKeyword: e.target.value });\n\t};\n\n\t_handleSearchWordSynonyms = (word = '') => {\n\t\tthis.loadingResults();\n\t\tlet searchWord = word ? word : this.state.searchKeyword;\n\t\tif (searchWord) {\n\t\t\tthis.findWordSynonyms(searchWord);\n\t\t}\n\t};\n\t_redirect = () => {\n\t\tif (!!this.state.searchKeyword) this.props.history.push('/browse/' + this.state.searchKeyword);\n\t};\n\t_renderResults = () => {\n\t\tif (this.state.results === false) {\n\t\t\treturn <ResultMessage message={'Loading results please wait...'} />;\n\t\t} else if (this.state.results === null) {\n\t\t\treturn <ResultMessage message={'Please type in a word to show synonyms.'} />;\n\t\t} else if (this.state.results === undefined || this.state.results.size === 0) {\n\t\t\treturn (\n\t\t\t\t<Result\n\t\t\t\t\tkeyword={this.state.currentWord}\n\t\t\t\t\tsynonyms={undefined}\n\t\t\t\t\tsearch={this._redirect}\n\t\t\t\t\tremove={this.props.remove_synonym}\n\t\t\t\t\tadd={this.props.add_synonym}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Result\n\t\t\t\t\tkeyword={this.state.currentWord}\n\t\t\t\t\tsynonyms={Array.from(this.state.results)}\n\t\t\t\t\tsearch={this._redirect}\n\t\t\t\t\tremove={this.props.remove_synonym}\n\t\t\t\t\tadd={this.props.add_synonym}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<SearchBar\n\t\t\t\t\tsearchKeyword={this.state.searchKeyword}\n\t\t\t\t\tsearch={this._redirect}\n\t\t\t\t\tupdateKeyword={this._onSearchKeywordUpdate}\n\t\t\t\t/>\n\t\t\t\t{this._renderResults()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Search;\n","import React from 'react';\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"not-found\">404 - Page not found </h1>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","/**\n * Undirected Graph data structure implemented with an adjacent list\n */\nexport default class UndirectedGraph {\n\tconstructor() {\n\t\tthis.nodes = new Map();\n\t}\n\t/**\n\t * Add a node to the graph.\n\t * @param {any} value node's value\n\t */\n\taddVertex(value) {\n\t\tif (!this.nodes.has(value)) {\n\t\t\tthis.nodes.set(value, new Set());\n\t\t}\n\t}\n\n\t/**\n\t * Removes node from graph\n\t * It also removes the reference of the deleted node from\n\t *  anywhere it was adjacent to.\n\t * @param {any} value node's value\n\t */\n\tremoveVertex(value) {\n\t\tif (this.nodes.has(value)) {\n\t\t\tthis.nodes.delete(value);\n\t\t}\n\t}\n\n\t/**\n\t * Create a connection between source node and destination node.\n\t * Beacuse the graph is undirected it will also create the conneciton from destination to source.\n\t * @param {any} source\n\t * @param {any} destination\n\t */\n\taddEdge(source, destination) {\n\t\tif (source === '' || destination === '') return; //skip empty strings\n\t\tthis.addVertex(source);\n\t\tthis.addVertex(destination);\n\n\t\tthis.nodes.get(source).add(destination);\n\t\tthis.nodes.get(destination).add(source);\n\t}\n\n\t/**\n\t * Remove connection between source node and destination.\n\t * Beacuse the graph is undirected it will also remove the conneciton from destination to source.\n\t *\n\t *\n\t * @param {any} source\n\t * @param {any} destination\n\t */\n\tremoveEdge(source, destination) {\n\t\tlet sourceNodes = this.nodes.get(source);\n\t\tif (sourceNodes.has(destination)) {\n\t\t\tsourceNodes.delete(destination);\n\t\t}\n\t\tlet destinationNodes = this.nodes.get(destination);\n\t\tif (destinationNodes.has(source)) {\n\t\t\tdestinationNodes.delete(source);\n\t\t}\n\t}\n\n\t/**\n\t * Graph search using depth-first search algorithm to get all connected nodes\n\t * @param {string} first node to start \n\t * @returns {[string]} list of connected nodes to the first node\n\t */\n\tgraphSearchDFS(first) {\n\t\tconst visited = new Set();\n\t\tconst visitList = []; // using array as stack with push and pop methods\n\n\t\tvisitList.push(first);\n\n\t\twhile (visitList && visitList.length) {\n\t\t\t//while visitList is not empty\n\t\t\tconst node = visitList.pop();\n\t\t\tif (node && !visited.has(node)) {\n\t\t\t\tvisited.add(node);\n\t\t\t\tlet synonymWords = this.nodes.get(node);\n\t\t\t\tif (synonymWords && synonymWords.size > 0) {\n\t\t\t\t\tsynonymWords.forEach((connectedNode) => visitList.push(connectedNode));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn visited; //return as array\n\t}\n}\n","import UndirectedGraph from './UndirectedGraph.js';\n\n/**\n * Implementation of Synonym Word Dictionary using facade pattern to UndirectedGraph \n * for readability of code\n */\nexport default class SynonymsDict {\n\tconstructor() {\n\t\tthis.graph = new UndirectedGraph();\n\t}\n\n\t/**\n\t * Connect two words in graph\n\t * @param {string} firstWord \n\t * @param {string} secondWord \n\t */\n\tpairSynonyms(firstWord, secondWord) {\n\t\tif (firstWord === secondWord) return; //skip pairing the same word\n\t\tthis.graph.addEdge(firstWord, secondWord);\n\t}\n\n\t/**\n\t * Disconnect two words in graph \n\t * @param {string} firstWord \n\t * @param {string} secondWord \n\t */\n\tunpairSynonyms(firstWord, secondWord) {\n\t\tif (firstWord === secondWord) return; //skip unpairing the same word\n\n\t\tlet words = this.graph.graphSearchDFS(firstWord);\n\t\tif (words.has(firstWord)) {\n\t\t\twords.delete(firstWord);\n\t\t}\n\t\tif (words.has(secondWord)) {\n\t\t\twords.delete(secondWord);\n\t\t}\n\t\t//goal is to keep transitivity in unpairing words\n\t\t//e.g if A <-> B <-> C (<-> synonym with each other)\n\t\t// and if  A unpairs with B\n\t\t// result should be A<->C   and B is alone\n\t\twords.forEach((synonymWord) => {\n\t\t\tthis.graph.addEdge(firstWord, synonymWord); //adding all synonyms of second word to first word\n\t\t\tthis.graph.removeEdge(secondWord, synonymWord); // removing second word from its connected nodes\n\t\t});\n\t\tthis.graph.removeEdge(firstWord, secondWord);\n\t}\n\n\t/**\n\t * Connect two words in graph\n\t * @param {string} word \n\t * @returns {Array[string]} list of synonym words\n\t */\n\tgetAllSynonymWords(word) {\n\t\tlet words = this.graph.graphSearchDFS(word);\n\t\twords.delete(word);\n\t\treturn [ ...words ];\n\t}\n}\n","import React, { Component } from 'react';\nimport Layout from './layout/Layout';\nimport Search from './search/Search';\nimport NotFound from './NotFound';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport SynonymsDict from '../utilities/SynonymsDict';\nclass App extends Component {\n\tstate = {\n\t\tdictionary: new SynonymsDict()\n\t};\n\tstatic _clean_word = (word) => {\n\t\treturn word.trim().toLowerCase();\n\t};\n\n\tfind_synonyms = (word) => {\n\t\tword = App._clean_word(word);\n\t\tlet words = this.state.dictionary.getAllSynonymWords(word);\n\t\tconsole.log('riejci:', words);\n\t\treturn words;\n\t};\n\tadd_synonym = (word1, word2) => {\n\t\tword1 = App._clean_word(word1);\n\t\tword2 = App._clean_word(word2);\n\t\tlet dict = this.state.dictionary;\n\t\tdict.pairSynonyms(word1, word2);\n\t\tthis.setState({ dictionary: dict });\n\t};\n\tremove_synonym = (word1, word2) => {\n\t\tword1 = App._clean_word(word1);\n\t\tword2 = App._clean_word(word2);\n\t\tlet dict = this.state.dictionary;\n\t\tdict.unpairSynonyms(word1, word2);\n\t\tthis.setState({ dictionary: dict });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/browse/:keyword?\"\n\t\t\t\t\t\tcomponent={(props) => (\n\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tdictionary={this.state.dictionary}\n\t\t\t\t\t\t\t\tadd_synonym={this.add_synonym}\n\t\t\t\t\t\t\t\tremove_synonym={this.remove_synonym}\n\t\t\t\t\t\t\t\tfind_synonyms={this.find_synonyms}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect exact from=\"/\" to=\"/browse\" />\n\t\t\t\t\t<Route path=\"/404\" component={NotFound} />\n\t\t\t\t\t<Redirect to=\"/404\" />\n\t\t\t\t</Switch>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.scss';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<HashRouter basename=\"\">\n\t\t<App />\n\t</HashRouter>,\n\tdocument.querySelector('#root')\n);\n"],"sourceRoot":""}